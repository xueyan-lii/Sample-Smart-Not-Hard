tag:
  - math_word_problems
task: gsm8k_fewshot_128
dataset_path: gsm8k
dataset_name: main
output_type: generate_until
training_split: train
test_split: test
doc_to_target: '{{answer.split(''####'')[-1].strip() if answer is defined else target}}'
doc_to_text: "Question: {{question}}\n Answer: "
fewshot_config:
  sampler: first_n
  samples:
  - question: There are 15 trees in the grove. Grove workers will plant trees in the
      grove today. After they are done, there will be 21 trees. How many trees did
      the grove workers plant today?
    target: There are 15 trees originally. Then there were 21 trees after some more
      were planted. So there must have been 21 - 15 = 6. The answer is 6.
  - question: If there are 3 cars in the parking lot and 2 more cars arrive, how many
      cars are in the parking lot?
    target: There are originally 3 cars. 2 more cars arrive. 3 + 2 = 5. The answer
      is 5.
  - question: Leah had 32 chocolates and her sister had 42. If they ate 35, how many
      pieces do they have left in total?
    target: Originally, Leah had 32 chocolates. Her sister had 42. So in total they
      had 32 + 42 = 74. After eating 35, they had 74 - 35 = 39. The answer is 39.
  - question: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12
      lollipops. How many lollipops did Jason give to Denny?
    target: Jason started with 20 lollipops. Then he had 12 after giving some to Denny.
      So he gave Denny 20 - 12 = 8. The answer is 8.
  - question: Shawn has five toys. For Christmas, he got two toys each from his mom and
      dad. How many toys does he have now?
    target: Shawn started with 5 toys. If he got 2 toys each from his mom and dad,
      then that is 4 more toys. 5 + 4 = 9. The answer is 9.
  - question: There were nine computers in the server room. Five more computers were
      installed each day, from monday to thursday. How many computers are now in the
      server room?
    target: There were originally 9 computers. For each of 4 days, 5 more computers
      were added. So 5 * 4 = 20 computers were added. 9 + 20 is 29. The answer is
      29.
  - question: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday,
      he lost 2 more. How many golf balls did he have at the end of wednesday?
    target: Michael started with 58 golf balls. After losing 23 on tuesday, he had
      58 - 23 = 35. After losing 2 more, he had 35 - 2 = 33 golf balls. The answer
      is 33.
  - question: Olivia has $23. She bought five bagels for $3 each. How much money does
      she have left?
    target: Olivia had 23 dollars. 5 bagels for 3 dollars each will be 5 x 3 = 15
      dollars. So she has 23 - 15 dollars left. 23 - 15 is 8. The answer is 8.
metric_list:
  - metric: exact_match
    aggregation: mean
    higher_is_better: true
    ignore_case: true
    ignore_punctuation: false
    regexes_to_ignore:
      - ","
      - "\\$"
      - "(?s).*#### "
      - "\\.$"
      - "\\\\boxed\\{"          # LaTeX \boxed{ (double backslashes for literal \)
      - "\\}\\$"                # LaTeX closing }$ (escape backslashes and $)
      - "\\{|\\}"              # Curly braces (escape backslashes, | is safe)
      - ":"
      - "\\s+"                  # Whitespace (escape backslash)
      - "[a-zA-Z]+"
      - "\\\\[\\(\\)]"            # Remove LaTeX inline math markers \( \)
      - "\\\\[\\[\\]]"            # Remove LaTeX display math markers \[ \]
      - "\\\\"                  # Remove stray backslashes
generation_kwargs:
  until:
    - "Question:"
    - "</s>"
    - "<|im_end|>"
    - "<|endoftext|>"
    - "You are an AI assistant"
  do_sample: True
  max_new_tokens: 200
num_fewshot: 5
repeats: 128
filter_list:
  - name: "score-first" # pick only the first response, and report metrics on that
    filter:
      - function: "regex"
        regex_pattern: (?<=[Tt]he answer is )[^.\\]+
      - function: "take_first"
  - name: "maj@8"
    filter:
      - function: "take_first_k"
        k: 8
      - function: "regex"
        regex_pattern: (?<=[Tt]he answer is )[^.\\]+
      - function: "majority_vote"
      - function: "take_first"
  - name: "maj@16"
    filter:
      - function: "take_first_k"
        k: 16
      - function: "regex"
        regex_pattern: (?<=[Tt]he answer is )[^.\\]+
      - function: "majority_vote"
      - function: "take_first"
  - name: "maj@32"
    filter:
      - function: "take_first_k"
        k: 32
      - function: "regex"
        regex_pattern: (?<=[Tt]he answer is )[^.\\]+
      - function: "majority_vote"
      - function: "take_first"
  - name: "maj@64"
    filter:
      - function: "take_first_k"
        k: 64
      - function: "regex"
        regex_pattern: (?<=[Tt]he answer is )[^.\\]+
      - function: "majority_vote"
      - function: "take_first"
  - name: "maj@128"
    filter:
      - function: "take_first_k"
        k: 128
      - function: "regex"
        regex_pattern: (?<=[Tt]he answer is )[^.\\]+
      - function: "majority_vote"
      - function: "take_first"
metadata:
  version: 3.0
