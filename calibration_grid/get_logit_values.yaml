# This config works only for training on single device.
#used to collect softmax values and ids to discover thresholds for each confidence bin.

output_dir: /  # /tmp may be deleted by your system. Change it to your preference.

# Model Arguments
model:
  _component_: torchtune.models.qwen2_5.qwen2_5_1_5b_instruct

checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: /
  checkpoint_files: [
    model.safetensors,
  ]
  output_dir: ${output_dir}
  model_type: QWEN2

tokenizer:
  _component_: torchtune.models.qwen2_5.qwen2_5_tokenizer
  path: /vocab.json
  merges_file: /merges.txt
  max_seq_len: null

  
# Dataset
dataset:
  _component_: torchtune.datasets.instruct_dataset
  packed: False  # True increases speed
  train_on_input: False
  source: openai/gsm8k
  name: main
  split: train #[90%:] #val is in the first 10%
  column_map:
    input: question
    output: answer
seed: null
shuffle: True

resume_from_checkpoint: False

# Fine-tuning arguments
batch_size: 1
epochs: 1
optimizer:
  _component_: torch.optim.AdamW
  lr: 5e-5
loss:
  _component_: torchtune.modules.loss.LinearCrossEntropyLoss
lr_scheduler:
  _component_: torchtune.training.lr_schedulers.get_cosine_schedule_with_warmup
  num_warmup_steps: 0
max_steps_per_epoch: 1000 #null
gradient_accumulation_steps: 1  # Use to increase effective batch size
optimizer_in_bwd: False  # True saves memory. Requires gradient_accumulation_steps=1
clip_grad_norm: null
compile: False  # torch.compile the model + loss, True increases speed + decreases memory


# Training environment
device: cuda:0

# Memory management
enable_activation_checkpointing: True  # True reduces memory
enable_activation_offloading: False  # True reduces memory

# Reduced precision
dtype: bf16

# Logging
metric_logger:
  _component_: torchtune.training.metric_logging.DiskLogger
  log_dir: ${output_dir}/logs
log_every_n_steps: 1
log_peak_memory_stats: True
log_topk: True
topk_k: 20 #for saving per token softmax values, not for sampling. default is 10

# Profiler (disabled)
profiler:
  _component_: torchtune.training.setup_torch_profiler
  enabled: False

  #Output directory of trace artifacts
  output_dir: ${output_dir}/profiling_outputs

  #`torch.profiler.ProfilerActivity` types to trace
  cpu: True
  cuda: True

  #trace options passed to `torch.profiler.profile`
  profile_memory: False
  with_stack: False
  record_shapes: True
  with_flops: False

  # `torch.profiler.schedule` options:
  # wait_steps -> wait, warmup_steps -> warmup, active_steps -> active, num_cycles -> repeat
  wait_steps: 5
  warmup_steps: 3
  active_steps: 2
  num_cycles: 1
